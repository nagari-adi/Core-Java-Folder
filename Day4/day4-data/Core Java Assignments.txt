Day 1
1. Please solve the following assignment without IDE (to revise java app development , packages n classpath)
2. Extract javadocs & open index.html in your browser
3. Create Point class Point2D , under package com.app.geometry   : for representing a point in x-y co-ordinate system.
eg : day1_lab \src 
com \ app \geometry --- Point2D.java
package com.app.geometry;

3.1 Create a parameterized constructor to accept x & y co-ords.

3.2 Add public String getDetails()) --to return string form point's x & y co-ords

3.3 Add isEqual method to Point2D class : boolean returning method : must return true if both points are having same x,y co-ords or false otherwise. 
eg : boolean isEqual(Point2D anotherPoint){....}

3.4 Add a method to Point2D class -- to create and return new point having given x & y offset.
eg : Point2D p1=new Point2D(10,20);
Point2d p3=p1.createNewPoint(5,-2);//p3 : 15,18
If user supplies offset of (5, -2) : your method should return a new point object placed at (15,18)
eg : Point2D createNewPoint(int xOff,iny yOff){...}

3.5 Add calculateDistance method to calculate distance between current point & specified point & return the distance to the caller.
(eg double  calcDistance(Point2D p2))
Hint : Use distance formula . Use java.lang.Math class methods --sqrt, pow etc.

3.6 Write TestPoint class , under "com.app.tester" package with a main method
Accept co ordinates of 2 points from user (Scanner) --p1 & p2

3.7 Use getDetails method to display point details.(p1's details & p2's details)

3.8 Invoke isEqual & display if points are same or different (i.e p1 & p2 are located at the same position)

3.9 Create new point p3 , with the dimensions offset from p1.
I/P --x offset & y offset

3.10 Display distance between 2 points.(between p1 & p2)

Day 2

1. Solve Tank assignment along with memory picture.

class Tank {
  private int level;
  Tank(int l)
   {
     level=l;
   }
  public void setLevel(int level1)
  {
    level=level1;
  }
  public int getLevel()
  {
    return level;
  }
}	

public class Assignment {
  public static void main(String[] args) {
    Tank t1 = new Tank(10);
    Tank t2 = new Tank(20);
     s.o.p("1: t1.level: " + t1.getLevel() +
          ", t2.level: " + t2.getLevel());
    t1 = t2;
    s.o.p("2: t1.level: " + t1.getLevel() +
          ", t2.level: " + t2.getLevel());
    t1.setLevel(27);
     s.o.p("3: t1.level: " + t1.getLevel() +
          ", t2.level: " + t2.getLevel());
    t2.setLevel(t1.getLevel()+10);
     s.o.p("4: t1.level: " + t1.getLevel() +
          ", t2.level: " + t2.getLevel());
  }
}

2. Complete day 1 assignment (without using IDE)
set classpath , to run java application from anywhere.


3. Display food menu to user. Assign fixed prices to food items.
User will select items from menu along with the quantity. (eg 1. Dosa 2. Samosa 3. Rice 4. Noodles .......10 . Generate Bill ) When user enters 'Generate Bill' option, display total bill & exit.
(Can use System.exit(0) to terminate java app or simply use exit flag)

Day 3

1. Start using STS 3.9.13 (Eclipse IDE with Spring)
Choose fresh workspace (new folder)

1.5 Import supplied eclipse project , in your workspace, for revision

2. Create a java application for the following.
 Create a Customer class , in com.app.core package , with data members (all private : tight encapsulation)
name(String),email(String),age(int), creditLimit(double)

2.1 Supply a parameterized constructor to accept all details from user
eg : public Customer(String name,......)
{
 this.name=name;.......
}

2.2 Supply an argument less  constructor to init default name to "Riya" , email to "riya@gmail.com",age=25,creditLimit=10000
eg : public Customer()
{
  this("Riya",......);
}

2.3 Supply another constructor , to init default creditLimit to 10000, taking rest of the i/ps from user.
eg : 
public Customer(String nm1,String em1,int age1)
{
  this(nm1,em1,age1,10000);
}
2.4 Write a method , getDetails to return String form of customer name & credit limit details.
eg : Hello Madhura , Credit Lim : 34567
2.5 Supply getter & setter for creditLimit.
eg : g
public double getCreditLimit() {...}
s 
public void setCreditLimit(double creditLimit) {....}

2.6 Create a TestCustomer class , under tester package.
.Use scanner to accept user i/ps.
Create 3 customers using 3 different constructors(2.1 : c1 ,2.2 : c2,2.3 :c3 )
Display customer details of all customers.
Prompt user , for changing creditLimit of the c3.
Display new credit limit on the console.

3. Complete pending assignments

4. Optional Assignment

Create java application for the following.
Create Student class  in package com.cdac.core

2.1 Every student must have   --- id(int) --, name (String), email(String), age(int),gpa(double)
+ public static int idGenerator;

2.2 Add suitable parameterized constructor.
Accept --id name,email,age only from user.

2.3 Add a method fetchDetails to  fetch student details
(ret type -- String)

2.4 Add computeGPA method in Student class
Accept 3 method arguments for : scores for quiz , test & assignments
gpa should be computed on 20 % of quiz score, 50% of test score & 30% of assignment score.
(Normalize it to 1-10 scale)

2.5 Write a TestStudent class in tester package
1. Admit 2 new Students , using scanner
I/P student details (id name,email,age)

2. Assign scores for 2 students(quiz , test , assignment all out of 100)

3. Display name of topper(having higher GPA)

Day 4
1.
Import day4.1 eclipse project in your workspace.
In TestDynInitBoxArray.java , replace , for loop (for initializing box objs) by for-each loop
Observe n conclude

2. In the same src : 
 Double box width for all boxes having volume > 100.(USE for-each & solve this)

3. Create 2D array of double , to store values 
from 100 to 200 (i.e actual values : 100.0,101.0......200.0) : use for loop
Display these values using
for loop
for-each 
Arrays class method : deepToString


2. Create new eclipse project "day4_lab"
Copy earlier created Point2D class in it (along with the package)
Create a new TestPoints class in "com.app.tester" package for the following.

1.1 Prompt user , how many points to plot?
Create suitable array , to store Point2D type of references.

1.2 Add a menu , Run the application till user chooses option 4 (exit)

1 Plot a new point
I/P --index , x & y
eg : If user supplies 5 50 100
Create a Point2D with x, y of (50,100) & its reference should be stored at the 5th index position in array.

2 Display all points plotted so far. (Use for-each)
Will null checking be required?

3. Calculate distance
I/P strt , end point indexes.
eg : If user enters 2 6
Find out the distance between 2nd & 6th point. (array indexes start from 0)

10. Exit

Note : Boundary condition checking & null checking is expected.
(Meaning : if user supplies invalid indes , then give error message : invalid index --out of range
If no point is plotted at user specified index , then give error message : invalid index -- no point plotted here.)

