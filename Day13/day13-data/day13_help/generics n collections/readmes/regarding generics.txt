Generic syntax ---

Available from Java SE 5 onwards.
Represents Parameterized Types.(eg : ArrayList<Emp>) 
Can Create Generic classes, interfaces, methods and constructors.

In Pre-generics world , similar achieved via Object class reference.

Syntax -- Similar to c++ templates (angle brackets)
eg : ArrayList<Emp> , HashMap<Integer,Account> .....

1. Syntax is different than C++ --for nested collections only.
2. NO code bloat issues unlike c++;


Advantages
Adds Type Safety to the code @ compile time

Meaning : 
1. Can add type safe code where type-mismatch errors(i.e ClassCastExceptions) are caught at compile time.
2. No need of explicit type casting, as all casts are automatic and implicit.


A generic class means that the class declaration includes a type parameter.
eg --- class MyGeneric<T> {...}
T ---type  --- ref type
T --- only ref types are supported (no primtive types)

Understand why generics with example.



